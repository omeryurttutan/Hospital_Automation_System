/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package hbys.gui.forms;

import hbys.auth.LoginValidator; // Giri≈ü doƒürulama i√ßin
import hbys.database.DatabaseConnection; // Veritabanƒ± baƒülantƒ±sƒ± i√ßin
import hbys.gui.forms.DoctorPage; // Doktor sayfasƒ±
import hbys.gui.forms.PatientPage; // Hasta sayfasƒ±
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import javax.swing.JOptionPane;

/**
 *
 * @author Rafet Bartuƒü
 */
public class LoginPage extends javax.swing.JFrame {

    /**
     * Creates new form LoginPage
     */
    public LoginPage() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabelUserName = new javax.swing.JLabel();
        jLabelPassword = new javax.swing.JLabel();
        jPasswordField = new javax.swing.JPasswordField();
        jTextField_Username = new javax.swing.JTextField();
        jToggleButton_ShowPassword = new javax.swing.JToggleButton();
        jButton_Login = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Welcome.");
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setName("Welcome."); // NOI18N
        setResizable(false);

        jLabelUserName.setText("User:");

        jLabelPassword.setText("Password:");

        jToggleButton_ShowPassword.setText("üëÅÔ∏è");
        jToggleButton_ShowPassword.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton_ShowPasswordActionPerformed(evt);
            }
        });

        jButton_Login.setText("Login");
        jButton_Login.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_LoginActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabelUserName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabelPassword, javax.swing.GroupLayout.DEFAULT_SIZE, 83, Short.MAX_VALUE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(jTextField_Username))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton_Login, javax.swing.GroupLayout.DEFAULT_SIZE, 308, Short.MAX_VALUE)
                            .addComponent(jPasswordField))))
                .addGap(18, 18, 18)
                .addComponent(jToggleButton_ShowPassword)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabelUserName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jTextField_Username, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPasswordField, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jToggleButton_ShowPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton_Login, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(48, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton_LoginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_LoginActionPerformed
        String email = jTextField_Username.getText();
    String password = new String(jPasswordField.getPassword());

    System.out.println("Login Attempt:");
    System.out.println("Email: " + email);
    System.out.println("Password: " + password);

    // Check for admin credentials
    if ("admin".equalsIgnoreCase(email) && "admin123".equals(password)) {
        JOptionPane.showMessageDialog(this, "Welcome Admin!");
        new AdminPanel().setVisible(true); // Open admin panel
        this.dispose();
        return;
    }

    String userType = authenticateUser(email, password); // Kullanƒ±cƒ±yƒ± doƒürula
    if (userType == null) {
        JOptionPane.showMessageDialog(this, "Invalid email or password!");
    } else if ("Doctor".equalsIgnoreCase(userType)) {
        int doctorID = getDoctorID(userID); // A≈üaƒüƒ±daki metodu kullanarak DoctorID'yi alƒ±n
        if (doctorID == -1) {
            JOptionPane.showMessageDialog(this, "Error retrieving doctor details.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        JOptionPane.showMessageDialog(this, "Welcome Doctor!");
        new DoctorPage(doctorID).setVisible(true); // Doktor sayfasƒ±nƒ± a√ß
        this.dispose();
    } else if ("Patient".equalsIgnoreCase(userType)) {
        // Hasta bilgilerini al
        int patientID = getPatientID(userID); // Hasta ID'sini al
        if (patientID == -1) {
            JOptionPane.showMessageDialog(this, "Error retrieving patient details.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        String patientName = getUserName(userID); // Kullanƒ±cƒ± adƒ±nƒ± al
        System.out.println("Patient ID: " + patientID); // Konsola yazdƒ±r
        new PatientPage(patientID, userID).setVisible(true); // Hasta sayfasƒ±nƒ± a√ß
        this.dispose(); // Login ekranƒ±nƒ± kapat
    }
    }//GEN-LAST:event_jButton_LoginActionPerformed

    private void jToggleButton_ShowPasswordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton_ShowPasswordActionPerformed
        // ≈ûifre alanƒ±ndaki karakterleri g√∂ster/gizle
        if (jPasswordField.getEchoChar() == '\u2022') { // Varsayƒ±lan olarak gizli (bullet karakter)
            jPasswordField.setEchoChar((char) 0); // ≈ûifreyi g√∂ster
        } else {
            jPasswordField.setEchoChar('\u2022'); // ≈ûifreyi gizle
        }
    }//GEN-LAST:event_jToggleButton_ShowPasswordActionPerformed

    private int userID;

    private String authenticateUser(String email, String password) {
        try ( Connection conn = DatabaseConnection.getConnection()) {
            String query = "SELECT UserID, UserType FROM Users WHERE Email = ? AND Password = ?";
            PreparedStatement ps = conn.prepareStatement(query);
            ps.setString(1, email);
            ps.setString(2, password);
            ResultSet rs = ps.executeQuery();
            if (rs.next()) {
                userID = rs.getInt("UserID");
                return rs.getString("UserType");
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        return null;
    }

    private String getUserName(int userID) {
        try ( Connection conn = DatabaseConnection.getConnection()) {
            String query = "SELECT CONCAT(FirstName, ' ', LastName) AS FullName FROM Users WHERE UserID = ?";
            PreparedStatement ps = conn.prepareStatement(query);
            ps.setInt(1, userID);
            ResultSet rs = ps.executeQuery();
            if (rs.next()) {
                return rs.getString("FullName"); // Kullanƒ±cƒ±nƒ±n tam adƒ± d√∂nd√ºr√ºl√ºr
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        return "Unknown"; // Kullanƒ±cƒ± bulunamadƒ±ysa
    }

    private int getPatientID(int userID) {
        try ( Connection conn = DatabaseConnection.getConnection()) {
            String query = "SELECT PatientID FROM Patients WHERE UserID = ?";
            PreparedStatement ps = conn.prepareStatement(query);
            ps.setInt(1, userID);
            ResultSet rs = ps.executeQuery();
            if (rs.next()) {
                return rs.getInt("PatientID"); // Hasta ID'sini d√∂nd√ºr
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        return -1; // Hasta bulunamadƒ±ysa -1 d√∂nd√ºr
    }

    private int getDoctorID(int userID) {
        try ( Connection conn = DatabaseConnection.getConnection()) {
            String query = "SELECT DoctorID FROM Doctors WHERE UserID = ?";
            PreparedStatement ps = conn.prepareStatement(query);
            ps.setInt(1, userID);
            ResultSet rs = ps.executeQuery();
            if (rs.next()) {
                return rs.getInt("DoctorID");
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        return -1; // Eƒüer doktor bulunamazsa -1 d√∂nd√ºr
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(LoginPage.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(LoginPage.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(LoginPage.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(LoginPage.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new LoginPage().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton_Login;
    private javax.swing.JLabel jLabelPassword;
    private javax.swing.JLabel jLabelUserName;
    private javax.swing.JPasswordField jPasswordField;
    private javax.swing.JTextField jTextField_Username;
    private javax.swing.JToggleButton jToggleButton_ShowPassword;
    // End of variables declaration//GEN-END:variables
}
